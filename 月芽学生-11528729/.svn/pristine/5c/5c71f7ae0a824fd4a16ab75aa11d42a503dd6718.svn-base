<!DOCTYPE html>
<html class="um landscape min-width-240px min-width-320px min-width-480px min-width-768px min-width-1024px">
    <head>
        <title></title>
        <meta charset="utf-8">
        <meta name="viewport" content="target-densitydpi=device-dpi, width=device-width, initial-scale=1, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
        <link rel="stylesheet" href="../css/fonts/font-awesome.min.css">
        <link rel="stylesheet" href="../css/ui-box.css">
        <link rel="stylesheet" href="../css/ui-base.css">
        <link rel="stylesheet" href="../css/ui-color.css">
        <link rel="stylesheet" href="../css/appcan.control.css">
        <link rel="stylesheet" href="../css/main.css">
        <style>
            .checkbox_on {
                width:1em;
                height:1em;
                background: url(../css/icons/checkbox_on.png) no-repeat;
                background-size: 100% 100%;
            }
            .checkbox_off {
                width:1em;
                height:1em;
                background: url(../css/icons/checkbox_off.png) no-repeat;
                background-size: 100% 100%;
            }
           
             .mark_new {
                 width:3em;
                 height:3em;
                 background: url(../css/icons/mark_new_task.png) no-repeat;
                 background-size: 100% 100%;
             }
        </style>
    </head>
    <body class="um-vp sc-bg" ontouchstart>
        <div class="ub ub-ver ub-fh ub-f1 umar-t">
             <div id="listView" class="ub ub-fh ub-ver ub-f1" ></div>
         </div>
        
        <div id="item" class="item click ub ub-fh uhide ub-ver bc-white bc-border ubt ubb umar-t">
            <div class="ub ub-f1 uinn">
                <div class="ub ub-ac ub-pc umar-r bc-border uba" style="width:5em;height:6em;border-radius: 0.2em" >
                    <div class="ub" style="width:3.7em;height:5.2em">
                        <img src="../css/icons/noImg.png" class="ub ub-f1 bookImage bookImg" />
                        <div class="ub mark" style="position: absolute;top:0em;left:0em;z-index: 100"></div>
                        <div class="bookBox uhide"></div>
                    </div>
                </div>
                <div class="ub ub-f1 umar-l">
                    <div class="ub ub-f1 ub-ver">
                        <div class="ub ub-fh ub-ac">
                            <div class="ub ub-f1 bookName ub-pc sc-text-active txt-ellipsis"></div>
                       </div>
                        <div class="ub ub-fh ub-ac">
                            <div class="ub ub-f1 uinn ulev-1 ub-ac">
                                <div class="ub ub-ac ub-pc umar-r finishState">
                                    <div  class="ub checkbox umar-r" ></div>
                                    <div class="ub sc-text">通过测评</div>
                                </div>
                                <div class="ub ub-ac ub-pc umar-l isMustReview">
                                    <div  class="ub checkbox umar-r" ></div>
                                    <div class="ub sc-text">写读后感</div>
                                    <div class="ub sc-text level umar-l"></div>
                                </div>
                            </div>
                        </div>
                        <div class="ub ub-fh ub-ac umar-t">
                            <div class="ub ub-ac ub-pc sc-bc-blue bc-text-head ub-f1 btnReview click2" style="height:2em;border-radius: 0.5em">我要测评</div>
                            <div class="ub ub-ac ub-pc sc-bc-orange bc-text-head ub-f1 btnIntroduce click2" style="margin:0em 0.5em;height:2em;border-radius: 0.5em">写读后感</div>
                        </div>
                        <div class="ub ub-fh ub-ac sc-text ulev-1">
                            <div class="ub ub-f1 uinn">
                                <div class="ub">时限：</div>
                                <div class="ub startDate"></div>
                                <div class="ub ub-ac ub-pc" style="width:1em">-</div>
                                <div class="ub endDate"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
       </div>
    </body>
    <script src="../js/appcan.js"></script>
    <script src="../js/appcan.control.js"></script>
    <script src="../js/jquery-1.8.3.min.js"></script>
    <script src="../js/common.js"></script>
    <script src="../js/entity.js"></script>
    <script src="../js/tool.js"></script>
    </body>
    <script>
        var g_PageIndex = 1;
        var loadJson = {
            "textColor" : "#000",
            "imagePath" : "res://refesh_icon.png",
            "levelText" : "更新日期1",
            "pullToReloadText" : "下拉加载",
            "releaseToReloadText" : "释放加载",
            "loadingText" : "加载中，请稍等..."
        };
        var refreshJson = {
            "textColor" : "#000",
            "imagePath" : "res://refesh_icon.png",
            "levelText" : "更新日期1",
            "pullToReloadText" : "下拉刷新",
            "releaseToReloadText" : "释放刷新",
            "loadingText" : "刷新中，请稍等..."
        };
        
        appcan.ready(function() {
            getUserInfo();
            getCommInfo();
            uexWindow.setBounce(1);
            uexWindow.notifyBounceEvent(0, 1);
            uexWindow.notifyBounceEvent(1, 1);
            uexWindow.showBounceView(0, "rgba(0,0,0,0)", 1);
            uexWindow.showBounceView(1, "rgba(0,0,0,0)", 1);
            uexWindow.onBounceStateChange = function(type, state) {
                switch (type) {
                case 0:
                    if (state == 2) {
                      reloadData();
                    }
                    break;
                case 1:
                    if (state == 2) {
                        var time1 = new Date().format("HH:mm:ss");
                        loadJson.levelText = "上次加载: " + time1;
                        uexWindow.setBounceParams(1, JSON.stringify(loadJson));
                        loadReview();
                    }
                    break;
                }
            };
            
            var time1 = new Date().format("HH:mm:ss");
            loadJson.levelText = "上次更新: " + time1;
            refreshJson.levelText = "上次加载: " + time1;
            uexWindow.setBounceParams(0, JSON.stringify(refreshJson));
            uexWindow.setBounceParams(1, JSON.stringify(loadJson));
            reloadData();
            
        });
        
        function reloadData(){
            var time1 = new Date().format("HH:mm:ss");
            refreshJson.levelText = "上次刷新: " + time1;
            uexWindow.setBounceParams(0, JSON.stringify(refreshJson));
            $("#listView").empty();
            g_PageIndex = 1;
            loadReview();
        }
        
        function loadReview(){
             var params = {
                'userId' : userInfo.id,
                'pageSize' : 20,
                "finishState":"",
                'pageIndex' : g_PageIndex
            };
            common.ajax("/student/book/myTask", {
                params : JSON.stringify(params)
            }, function(data) {
                if (g_PageIndex == 1) {
                    uexWindow.resetBounceView("0");
                }else {
                    uexWindow.resetBounceView("1");
                }
                if (data.obj) {
                    if (!data.obj.count || data.obj.count == 0) {
                        myPrompt.show("暂无阅读任务~");
                        return;
                    }else  if (!data.obj.list || data.obj.list.length == 0) {
                        toast("没有更多数据了~", config.toastTimeShort);
                        return;
                    }
                } else {
                    if (g_PageIndex == 1) {
                        myPrompt.show("暂无阅读任务~");
                    }
                    return;
                }
                //hideNoData();
                var arr = [];
                for (var i = 0; i < data.obj.list.length; i++) {
                    var obj = data.obj.list[i];
                    var itemObj = $("#item").clone();
                    itemObj.attr("id", obj.recommend.bookId);
                    itemObj.removeClass("uhide");
                    if (obj.recommend.bookImage && obj.recommend.bookImage.length > 0) {
                        itemObj.find(".bookImg").attr("src", getHeadImageUrl(obj.recommend.bookImage));
                    }
                    itemObj.find(".startDate").html(getformatDate(obj.createDate,"yyyy.MM.dd"));
                    itemObj.find(".endDate").html(getformatDate(obj.recommend.endDate,"yyyy.MM.dd"));
                    itemObj.find(".bookName").html(obj.recommend.bookName);
                    
                    // itemObj.find(".isMustReview .checkbox").addClass(obj.recommend.isMustReview == "1"　? "checkbox_on":"checkbox_off");
                    // itemObj.find(".finishState .checkbox").addClass(obj.recommend.finishState == "1"　? "checkbox_on":"checkbox_off");
                     itemObj.find(".isMustReview .checkbox").addClass(obj.bookReviewCount > 0　? "checkbox_on":"checkbox_off");
                     itemObj.find(".finishState .checkbox").addClass(obj.exerciseAccuracy >= 0.7　? "checkbox_on":"checkbox_off");    
                                        
                    if(obj.recommend.isMustReview != "1") {
                        $("#btnIntroduce").addClass("uhide");
                    }
                    
                    var dateDiff = DateDiff(new Date().format("yyyy/MM/dd"),getformatDate(obj.createDate,"yyyy/MM/dd"));
                    if(dateDiff <= 2) {
                        itemObj.find(".mark").addClass("mark_new");
                    }
                    if (obj.bookReviewCount > 0) {
                        itemObj.find(".level").html("(" + (obj.reviewLevelName.length > 0 ? obj.reviewLevelName : "待评") + ")");
                    }
                    $('#listView').append(itemObj);
                };
                
                $(".btnReview").on("click",function(){
                     var id=$(this).parents(".item").attr("id");
                    getBookInfoById(userInfo.id,id,function(data){  
                        getBookInfo();
                        bookInfo=data;
                        setBookInfo();
                        appcan.window.open("book_review","../book/book_review.html",10);
                    },null);
                });
                $(".btnIntroduce").on("click",function(){
                    var id=$(this).parents(".item").attr("id");
                    getBookInfoById(userInfo.id,id,function(data){  
                        getBookInfo();
                        bookInfo=data;
                        setBookInfo();
                        appcan.window.open("book_introduce_add","../book/book_introduce_add.html",10);
                    },null);
                });
                
                g_PageIndex++;

            }, function(data) {
                toast(data.msg,config.toastTimeShort);
                if (g_PageIndex == 1) {
                    uexWindow.resetBounceView("0");
                }else {
                    uexWindow.resetBounceView("1");
                }
                if (g_PageIndex > 1) {
                    g_PageIndex--;
                }
            });
        }
    </script>
</html>
